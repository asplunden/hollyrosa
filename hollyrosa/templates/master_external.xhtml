<html>

<head>
    <meta content="text/html; charset=UTF-8" http-equiv="content-type" py:replace="''"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/> <!-- required by Bulma -->
    <title py:replace="''">Your title goes here</title>

    <link rel="stylesheet" type="text/css" media="screen" href="${tg.url('/css/bulma.css')}" />
    <link rel="stylesheet" type="text/css" media="screen" href="${tg.url('/css/style.css')}" />
    <link rel="stylesheet" type="text/css" media="print" href="${tg.url('/css/print.css')}" />
    <link rel="stylesheet" type="text/css" href="${tg.url('/scripts/dojo-release-1.11.3/dijit/themes/tundra/tundra.css')}" />

    <script src="${tg.url('/scripts/dojo-release-1.11.3/dojo/dojo.js')}" data-dojo-config="async: true"></script>
    <py:block name="head"/>
    <script>
    require(["common_menu", "tags", "dojo/_base/array","dojo/request/xhr", "dijit/Menu","dijit/MenuItem", "dijit/PopupMenuItem", "dojo/query!css2", "dojo/io-query", "dojo/dom", "dojo/on", "dojo/ready", "dojo/_base/window", "dojo/domReady!"], function(common_menu, tags, array, xhr, Menu, MenuItem, PopupMenuItem, query, ioQuery, dom, on, ready, win) {

    ready(function() {



    /* From Bulma for handling the navbar burger */
    // not needed since we are executing in dojo Redy function: document.addEventListener('DOMContentLoaded', function () {

      // Get all "navbar-burger" elements
      var navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

      // Check if there are any navbar burgers
      if (navbarBurgers.length > 0) {

        // Add a click event on each of them
        navbarBurgers.forEach(function (el) {
          el.addEventListener('click', function () {

            // Get the target from the "data-target" attribute
            var target = el.dataset.target;
            var target = document.getElementById(target);

            // Toggle the class on both the "navbar-burger" and the "navbar-menu"
            el.classList.toggle('is-active');
            target.classList.toggle('is-active');

          }); // end add event listener
        }); // end forEach
      } // end if
    //}); // end addEventListener
  }); // end ready
}); // end require
    </script>
</head>

<body class="tundra">
  <nav class="navbar is-link" role="navigation" aria-label="main navigation" data-target="navMenu">
    <div class="navbar-brand">
      <a class="navbar-item" href="${tg.url('/about')}">
        <img src="${tg.url('/images/hollyrosa_banner.png')}" alt="Hollyrosa Programme Booking System" width="112" height="28"/>
      </a>

      <button class="button navbar-burger" data-target="navMenu">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </div>
    <div class="navbar-menu " id="navMenu"> <!-- is-active  has to be set using some JS framework -->
      <!-- navbar start, navbar end -->
      <div class="navbar-start">
        <!-- navbar items -->
        <a class="navbar-item" href="${tg.url('/')}">Home</a>
        <a py:if="request.identity['user'].get('type','') == 'user'" class="navbar-item" href="${tg.url('/calendar/overview')}">Calendar overview</a>
        <a py:if="request.identity['user'].get('type','') == 'user'" class="navbar-item" href="${tg.url('/visiting_group/view_all')}">Visiting groups</a>
        <a py:if="request.identity['user'].get('type','') == 'user'" class="navbar-item" href="${tg.url('/vodb_group/view_all')}">VODB groups</a>
        <a py:if="request.identity['user'].get('type','') == 'user'" class="navbar-item" href="${tg.url('/tools/show')}">Tools</a>
        <a py:if="request.identity['user'].get('type','') == 'user'" class="navbar-item" href="${tg.url('/me/settings')}">Me</a>

        <a py:if="request.identity['user'].get('type','') == 'visiting_group'" class="navbar-item" href="${tg.url('/program_layer/layers', params={'visiting_group_id':request.identity['user'].get('_id','')})}">Live Calendar</a>
        <a py:if="request.identity['user'].get('type','') == 'visiting_group'" class="navbar-item" href="${tg.url('/program_layer/layers_printable', params={'visiting_group_id':request.identity['user'].get('_id','')})}">Printable Program Layer</a>
        <a py:if="request.identity['user'].get('type','') == 'visiting_group'" class="navbar-item" href="${tg.url('/visiting_group/view_bookings_of_name', params={'name':request.identity['user'].get('name','')})}">Printable Program Listing</a>
        <a py:if="request.identity['user'].get('type','') == 'visiting_group'" class="navbar-item" href="${tg.url('/visiting_group_program_request/edit_request', params={'visiting_group_id':request.identity['user'].get('_id','')})}">Booking Requests</a>


      </div>
      <div class="navbar-end">
        <!-- navbar items -->
        <a py:if="not request.identity" class="navbar-item" href="${tg.url('/login')}">Login</a>
        <a py:if="request.identity" class="navbar-item" href="${tg.url('/logout_handler')}">Logout &nbsp;<em py:if="request.identity['user'].has_key('display_name')">${request.identity['user'].get('display_name','')}</em><em py:if="request.identity['user'].has_key('name')">${request.identity['user'].get('name','')}</em></a>
      </div>
    </div>

  </nav>

  <py:with vars="flash=tg.flash_obj.render('flash', use_js=False)">
  <section class="section" py:if="flash">
    <div class="container">
      <py:if test="defined('page')">
      </py:if>
      <div py:if="flash" py:content="literal(flash)" id="flash">
      </div>
    </div>
    </section>
  </py:with>

  <py:block name="body"/>
  <!-- End of content -->

  <footer class="footer">
    <div class="container">
      <div class="tile is-ancestor">
        <div class="tile is-parent is-2">
          <article class="tile is-child notification has-text-centered">
            <p></p>
          </article>
        </div>
        <div class="tile is-parent is-8">
          <article class="tile is-child notification has-text-centered">

            <p><strong>Hollyrosa</strong> booking system is concieved and developed by Martin Eliasson. Copyright &copy; 2010-2023 <a href="http://asplunden.org">Martin Eliasson</a>. Hollyrosa is free software released under <a href="/about.html">AGPL (see license details)</a>, version controlled using Git and hosted at <a href="http://www.github.com/asplunden/hollyrosa">GitHub</a>.</p>

          </article>
        </div>
        <div class="tile is-parent is-2">
          <article class="tile is-child notification has-text-centered">

            <p></p>

          </article>
        </div>
      </div>
    </div>
  </footer>


</body>
</html>
