<html>

<head>
    <meta content="text/html; charset=UTF-8" http-equiv="content-type" py:replace="''"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/> <!-- required by Bulma -->
    <title py:replace="''">Your title goes here</title>

    <link rel="stylesheet" type="text/css" media="screen" href="${tg.url('/css/bulma.css')}" />
    <link rel="stylesheet" type="text/css" media="screen" href="${tg.url('/css/style.css')}" />
    <link rel="stylesheet" type="text/css" media="print" href="${tg.url('/css/print.css')}" />
    <link rel="stylesheet" type="text/css" href="${tg.url('/scripts/dojo-release-1.11.3/dijit/themes/tundra/tundra.css')}" />

    <script src="${tg.url('/scripts/dojo-release-1.11.3/dojo/dojo.js')}" data-dojo-config="async: true"></script>
    <py:block name="head"/>
    <script>
    require(["common_menu", "tags", "dojo/_base/array","dojo/request/xhr", "dijit/Menu","dijit/MenuItem", "dijit/PopupMenuItem", "dojo/query!css2", "dojo/io-query", "dojo/dom", "dojo/on", "dojo/ready", "dojo/_base/window", "dojo/domReady!"], function(common_menu, tags, array, xhr, Menu, MenuItem, PopupMenuItem, query, ioQuery, dom, on, ready, win) {

    ready(function() {

   //...setup menu for tools
	var tools_menu = new Menu({
   	targetNodeIds: ["mainmenu"],
      selector: "li.mainmenu_tools_choice",
      leftClickToOpen: common_menu.load_left_click_menu()
      });


   common_menu.add_redirect_menu_item(tools_menu, tools_menu, "Sanity check property usage", '', '${tg.url('/tools/sanity_check_property_usage')}');
   common_menu.add_menu_separator(tools_menu);
   common_menu.add_redirect_menu_item(tools_menu, tools_menu, "Age group statistics", '', '${tg.url('/tools/visitor_statistics')}');
   common_menu.add_redirect_menu_item(tools_menu, tools_menu, "VODB booking overview", '', '${tg.url('/vodb_group/vodb_booking_overview')}');
   common_menu.add_menu_separator(tools_menu);
   common_menu.add_redirect_menu_item(tools_menu, tools_menu, "List all users", '', '${tg.url('/user/show')}');
   common_menu.add_redirect_menu_item(tools_menu, tools_menu, "History", '', '${tg.url('/history/show')}');
   common_menu.add_redirect_menu_item(tools_menu, tools_menu, "Workflow", '', '${tg.url('/workflow/overview')}');

   /* assembling the filter booking status menu */
   var filter_menu = new Menu({
       targetNodeIds: ["mainmenu"],
       selector: "li.mainmenu_visiting_groups_choice",
       leftClickToOpen: common_menu.load_left_click_menu()
       });

    common_menu.add_redirect_menu_item(filter_menu, filter_menu, "All visiting groups", '', '${tg.url('/visiting_group/view_all')}');
    common_menu.add_redirect_menu_item(filter_menu, filter_menu, "All visiting groups today", '', '${tg.url('/visiting_group/view_today')}');

   var bokn_status_menu = new Menu();
   filter_menu.addChild(new PopupMenuItem({
   	label: "Program status...",
      popup: bokn_status_menu,
      leftClickToOpen: common_menu.load_left_click_menu()
   }));

   var vodb_state_menu = new Menu();
   filter_menu.addChild(new PopupMenuItem({
   	label: "VODB status...",
      popup: vodb_state_menu,
      leftClickToOpen: common_menu.load_left_click_menu()
   }));

   var tag_menu = new Menu();
   filter_menu.addChild(new PopupMenuItem({
   	label: "Tags...",
      popup: tag_menu,
      leftClickToOpen: common_menu.load_left_click_menu()
   }));

   var date_range_menu = new Menu();
   filter_menu.addChild(new PopupMenuItem({
   	label: "Date range...",
      popup: date_range_menu,
      leftClickToOpen: common_menu.load_left_click_menu()
   }));


    xhr("${tg.url('/visiting_group/get_all_tags_and_vodb_state_maps')}", {
    handleAs: "json",
    method: "GET"}).then(function(data){
        var all_tags = data.all_tags;
        array.forEach(all_tags, function(l) {
            common_menu.add_redirect_menu_item(filter_menu, tag_menu, l, {tag:l}, '${tg.url('/visiting_group/view_tags')}');
            });
        array.forEach(data.bokn_status_map, function(l) {
            common_menu.add_redirect_menu_item(filter_menu, bokn_status_menu, l[1], {program_state:l[0]}, '${tg.url('/visiting_group/view_program_state')}');
            });
        array.forEach(data.vodb_status_map, function(l) {
            common_menu.add_redirect_menu_item(filter_menu, vodb_state_menu, l[1], {'vodb_state':l[0]}, '${tg.url('/visiting_group/view_vodb_state')}');
            });
        });
	});
    });
    </script>
</head>

<body class="tundra">
  <nav class="navbar is-primary" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
      <a class="navbar-item" href="${tg.url('/about')}">
        <img src="https://bulma.io/images/bulma-logo.png" alt="Bulma: a modern CSS framework based on Flexbox" width="112" height="28"/>
      </a>

      <button class="button navbar-burger">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </div>
    <div class="navbar-menu is-active">
      <!-- navbar start, navbar end -->
      <div class="navbar-start">
        <!-- navbar items -->
        <a class="navbar-item" href="${tg.url('/')}">Home</a>
        <a class="navbar-item" href="${tg.url('/calendar/overview')}">Calendar overview</a>
        <a py:if="request.identity" class="navbar-item" href="${tg.url('/visiting_group/view_all')}">Visiting groups</a>
        <a py:if="request.identity" class="navbar-item" href="${tg.url('/vodb_group/view_all')}">VODB groups</a>
        <a py:if="request.identity" class="navbar-item" href="${tg.url('/tools/show')}">Tools</a>
        <a py:if="request.identity" class="navbar-item" href="${tg.url('/me/settings')}">Me</a>



      </div>
      <div class="navbar-end">
        <!-- navbar items -->
        <a py:if="not request.identity" class="navbar-item" href="${tg.url('/login')}">Login</a>
        <a py:if="request.identity" class="navbar-item" href="${tg.url('/logout_handler')}">Logout &nbsp;<em py:if="request.identity['user'].has_key('display_name')">${request.identity['user'].get('display_name','')}</em><em py:if="request.identity['user'].has_key('name')">${request.identity['user'].get('name','')}</em></a>
      </div>
    </div>

  </nav>

  <py:with vars="flash=tg.flash_obj.render('flash', use_js=False)">
  <section class="section" py:if="flash">
    <div class="container">
      <py:if test="defined('page')">

      </py:if>

          <div py:if="flash" py:content="literal(flash)" />
      
        </div>
    </section>
  </py:with>

      <py:block name="body"/>
    <!-- End of content -->
<!--
      <div class="clearingdiv"></div> -->



  <footer class="footer">
    <div class="foottext">
      <p><i>Hollyrosa</i> booking system is concieved and developed by Martin Eliasson. Copyright &copy; 2010-2017 <a href="http://asplunden.org">Martin Eliasson</a>. Hollyrosa is free software released under <a href="/about.html">AGPL (see license details)</a>, version controlled using Git and hosted at <a href="http://www.github.com/asplunden/hollyrosa">GitHub</a>.</p>
    </div>
  </footer>


</body>
</html>
