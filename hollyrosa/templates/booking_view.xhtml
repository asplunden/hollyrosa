<html py:extends="master.xhtml" py:strip="True">


<!--
Copyright 2010-2020 Martin Eliasson

This file is part of Hollyrosa

Hollyrosa is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Hollyrosa is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Hollyrosa.  If not, see <http://www.gnu.org/licenses/>.

-->

<head py:block="head" py:strip="True">
  <meta content="text/html; charset=UTF-8" http-equiv="content-type" py:replace="''"/>
  <title>Hollyrosa - ${activity['title']} ${booking['subtype']} Booking</title>

  <!-- TODO: is std.js used on this page ???? -->
  <script type="text/javascript" src="${tg.url('/scripts/std.js')}" ></script>

<!-- DOJO begin -->
<!-- TODO: refactor to its own booking_view.js -->
  <script>

require(["common_menu", "dojo/_base/array","dijit/Menu","dijit/MenuItem", "dijit/PopupMenuItem", "dojo/query!css2", "dojo/io-query", "dojo/dom", "dojo/on", "dojo/ready", "dojo/domReady!"], function(common_menu, array, Menu, MenuItem, PopupMenuItem, query, ioQuery, dom, on, ready) {

  //...setup menus
  //...TODO: more or less copy this code to Activity.html
  var menu = new Menu({
   	targetNodeIds: ["booking_info"],
      selector: "div.note",
      leftClickToOpen: common_menu.load_left_click_menu()
      });

  common_menu.add_booking_op_menu_item(menu, menu, "Edit booking", '${tg.url('/booking/edit_booked_booking')}', 'GET');
  common_menu.add_booking_op_menu_item(menu, menu, "Unschedule booking", '${tg.url('/booking/unschedule_booking')}','POST');
  common_menu.add_booking_op_menu_item(menu, menu, "Multi-book", '${tg.url('/booking/multi_book')}','GET');

  var set_state_url = '${tg.url('/workflow/set_state')}';
  array.forEach(common_menu.state_change_list, function(x) {common_menu.add_change_booking_state_menu_item(menu, menu, x['name'], x['state'], 0, set_state_url);});

});
  </script>

<!---small python function used in the template so one returns to the correct place -->

<!-- TODO: Had to remove Python code that switched between 'day' and 'live' for showing bookings -->

</head>
  <body class="tundra" py:block="body" py:strip="True">
    <section class="section">
      <div class="container">
        <h2 class="title">${activity['title']} ${booking['subtype']} booking</h2>
        <h3 class="subtitle">${booking['visiting_group_name']}</h3>
        <div id="booking_info">
          <p py:if="booking['slot_id'] != '' and booking['slot_id'] != None and booking_day != None">
            <a href="${tg.url('day', params={'day_id':booking_day.id})}">${formatDate(booking_day['date'])}</a> <b py:if="booking['slot_id'] !=None"> ${slot_position['time_from']}</b><b py:if="(booking['slot_id'] !=None) and (end_slot==None)"> to ${slot_position['time_to']} </b>  <b py:if="booking['slot_id'] ==None">booking has no slot row position </b> <span py:if="booking.has_key('booking_end_date')">Booking ends  <a href="${tg.url('day', params={'day':booking['booking_end_date']})}">${booking['booking_end_date']}</a> at <b>${end_slot['time_to']}</b></span>
            <p py:if="None !=booking_day"><span class="workflow_state_${str(booking['booking_state'])}">${workflow_map[booking['booking_state']]}</span></p>
          </p>
          <p py:if="'' == booking.get('slot_id','')">
            <span class="workflow_state_unscheduled">unscheduled</span>
            requested from ${booking.get('valid_from','-')} to ${booking.get('valid_to','-')} requested date ${booking.get('requested_date','-')}
          </p>

          <div class="note" hollyrosa:bid="${booking.id}" hollyrosa:bdayid="${booking['booking_day_id']}">${getRenderContent(booking)}</div>
          <p>
            <span py:if="booking.get('valid_from','') !='' and booking.get('valid_to','') != ''">Valid in range <em>${booking['valid_from']} to ${booking['valid_to']}</em>, </span><span py:if="'' != booking.get('requested_date','')">Requested date <em>${booking.get('requested_date','')}</em></span>
          </p>
          <p>Last changed by: ${user_name_map.get(booking['last_changed_by_id'], booking['last_changed_by_id'])}</p>
          <p py:if="booking.get('hide_warn_on_suspect_booking',False)">hide_warn_on_suspect_booking</p>
          <p>gid: ${booking['_id']}</p>
        </div>
        <div id="history" style="margin-top:3em;">
          <h3 class="subtitle">History</h3>
          <table class="data">
            <tr>
              <th>change op</th><th>time stamp</th><th>description</th><th>changed by</th>
            </tr>
            <tr py:for="h in history">
              <td class="data info"><span class="change_op_${h.get('change_op',0)}">${change_op_map[h.get('change_op',0)]}</span></td>
              <td class="data timestamp">${h['timestamp']}</td>
              <td class="data info">${h['change']}</td>
              <td class="data info">${h['changed_by']}</td>
            </tr>
          </table>
        </div>
      </div>
    </section>
  </body>
</html>
