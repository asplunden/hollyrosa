<html py:extends="master.xhtml" py:strip="True">

<!--
Copyright 2010-2017 Martin Eliasson

This file is part of Hollyrosa

Hollyrosa is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Hollyrosa is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Hollyrosa.  If not, see <http://www.gnu.org/licenses/>.

-->

<head py:block="head" py:strip="True">
  <meta content="text/html; charset=UTF-8" http-equiv="content-type" py:replace="''"/>
  <title>Hollyrosa - Edit Program Layers for ${visiting_group['name']}</title>
  <link rel="stylesheet" type="text/css" href="${tg.url('/scripts/dojo-release-1.11.3/dojox/grid/resources/tundraGrid.css')}" />

<!-- TODO: is parse on load needed any more -->
  <script>dojoConfig = {parseOnLoad: true}</script>
<!-- DOJO MODULE BEGINS HERE -->
  <script>
  require(["dojo/parser", 'dojo/on', 'dojo/_base/lang', 'dojox/grid/DataGrid', 'dojo/data/ItemFileWriteStore', 'dojox/grid/cells/dijit', 'dojo/date/stamp', 'dojo/date/locale', 'dojo/dom', 'dijit/registry', 'dojo/ready', 'dojo/domReady!'],
  function(parser, on, lang, DataGrid, ItemFileWriteStore, cells, stamp, locale, dom, registry, ready) {

    function saveCompleteCallback(){
      alert('save done');
    }

    function saveFailedCallback() {
      alert('save failed');
    }


    var layer_data = ${literal(layer_data)};
    var layer_store = new ItemFileWriteStore({
      data: layer_data
    });

    layer_store._saveEverything = function(a_saveCompleteCallback,
      a_saveFailedCallback /*Your callback to call if save fails*/,
      a_newFileContentString /*The generated JSON data to send somewhere*/) {
        var inp = dom.byId('layer_div_input');
        inp.value = a_newFileContentString;
        a_saveCompleteCallback();
    };


    var layer_layout = [[
      {'name': 'Visiting Group ID',                     field: 'layer_id', 'width': '200px', hidden:'True'},
      {'name': 'Visiting Group',                     field: 'name', 'width': '200px'},
      {'name': 'Connect',                     field: 'connect', 'width': '50px', type: dojox.grid.cells.Bool, editable:'True'},
      {'name': 'Colour',       field: 'colour', 'width': '100px', editable:'True'}
    ]];

    /*create a new grid*/
    var layer_grid = new DataGrid({
      id: 'layer_gridx',
      singleClickEdit: true,
      store: layer_store,
      structure: layer_layout,
      rowSelector: '10px'
    });

    function on_save_grid_to_input() {
      layer_store.save(saveCompleteCallback, saveFailedCallback);
    };

    function on_validate() {
        var myForm = registry.byId('myForm');
        if(myForm.validate()){
          /* do some more advanced form data validation
          * all requested dates should be within the range of the visiting group
          */
          return true;
        } else {
          alert('Form contains invalid data.  Please correct first');
          return false;
        }
        return true;
      }


    function on_ready(){
      //var save_button = registry.byId('save_button');
      parser.parse();
      var save_button = registry.byId('save_button');
      on( save_button , 'click', on_save_grid_to_input );
      on( save_button , 'click', on_validate);

      layer_grid.placeAt('layer_div');
      layer_grid.startup();
    }

    ready(on_ready);
  });

  </script>
</head>
<body class="tundra" py:block="body" py:strip="True">
  <h2>Edit Program Layers for ${visiting_group['name']}</h2>

  <div data-dojo-type="dijit/form/Form" id="myForm" data-dojo-id="myForm" encType="multipart/form-data" action="update_visiting_group_program_layers" method="post">
    <div id="layer_div" style="height:400px;"><input type="hidden" id="layer_div_input" name="layer_data"/><input type="hidden" id="visiting_group_id_input" name="visiting_group_id" value="${visiting_group['_id']}"/></div>
    <button data-dojo-type="dijit/form/Button" type="submit" name="save_button" value="Save" id="save_button">Save</button>
  </div>
</body>
</html>
